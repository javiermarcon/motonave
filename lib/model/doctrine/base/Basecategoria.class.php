<?php

/**
 * Basecategoria
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $nombre
 * @property Doctrine_Collection $productos
 * 
 * @method integer             getId()        Returns the current record's "id" value
 * @method string              getNombre()    Returns the current record's "nombre" value
 * @method Doctrine_Collection getProductos() Returns the current record's "productos" collection
 * @method categoria           setId()        Sets the current record's "id" value
 * @method categoria           setNombre()    Sets the current record's "nombre" value
 * @method categoria           setProductos() Sets the current record's "productos" collection
 * 
 * @package    importmol
 * @subpackage model
 * @author     Javier Marcon
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basecategoria extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('categorias');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 20,
             ));
        $this->hasColumn('nombre', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));

        $this->option('collate', 'latin1_swedish_ci');
        $this->option('charset', 'latin1');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('producto as productos', array(
             'local' => 'id',
             'foreign' => 'categorias_id'));

        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'hasManyRoots' => true,
             'rootColumnName' => 'root_id',
             ));
        $this->actAs($nestedset0);
    }
}