<?php

/**
 * Baseproducto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $nombre
 * @property clob $descripcion
 * @property string $codbarras_proveedor
 * @property integer $stock
 * @property integer $stock_min
 * @property integer $stock_reposicion
 * @property string $foto1
 * @property string $foto2
 * @property string $foto3
 * @property string $foto4
 * @property string $foto5
 * @property string $foto6
 * @property integer $categorias_id
 * @property float $precio
 * @property categoria $categoria
 * 
 * @method integer   getId()                  Returns the current record's "id" value
 * @method string    getNombre()              Returns the current record's "nombre" value
 * @method clob      getDescripcion()         Returns the current record's "descripcion" value
 * @method string    getCodbarrasProveedor()  Returns the current record's "codbarras_proveedor" value
 * @method integer   getStock()               Returns the current record's "stock" value
 * @method integer   getStockMin()            Returns the current record's "stock_min" value
 * @method integer   getStockReposicion()     Returns the current record's "stock_reposicion" value
 * @method string    getFoto1()               Returns the current record's "foto1" value
 * @method string    getFoto2()               Returns the current record's "foto2" value
 * @method string    getFoto3()               Returns the current record's "foto3" value
 * @method string    getFoto4()               Returns the current record's "foto4" value
 * @method string    getFoto5()               Returns the current record's "foto5" value
 * @method string    getFoto6()               Returns the current record's "foto6" value
 * @method integer   getCategoriasId()        Returns the current record's "categorias_id" value
 * @method float     getPrecio()              Returns the current record's "precio" value
 * @method categoria getCategoria()           Returns the current record's "categoria" value
 * @method producto  setId()                  Sets the current record's "id" value
 * @method producto  setNombre()              Sets the current record's "nombre" value
 * @method producto  setDescripcion()         Sets the current record's "descripcion" value
 * @method producto  setCodbarrasProveedor()  Sets the current record's "codbarras_proveedor" value
 * @method producto  setStock()               Sets the current record's "stock" value
 * @method producto  setStockMin()            Sets the current record's "stock_min" value
 * @method producto  setStockReposicion()     Sets the current record's "stock_reposicion" value
 * @method producto  setFoto1()               Sets the current record's "foto1" value
 * @method producto  setFoto2()               Sets the current record's "foto2" value
 * @method producto  setFoto3()               Sets the current record's "foto3" value
 * @method producto  setFoto4()               Sets the current record's "foto4" value
 * @method producto  setFoto5()               Sets the current record's "foto5" value
 * @method producto  setFoto6()               Sets the current record's "foto6" value
 * @method producto  setCategoriasId()        Sets the current record's "categorias_id" value
 * @method producto  setPrecio()              Sets the current record's "precio" value
 * @method producto  setCategoria()           Sets the current record's "categoria" value
 * 
 * @package    importmol
 * @subpackage model
 * @author     Javier Marcon
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseproducto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('productos');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 20,
             ));
        $this->hasColumn('nombre', 'string', 150, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 150,
             ));
        $this->hasColumn('descripcion', 'clob', 65535, array(
             'type' => 'clob',
             'notnull' => false,
             'length' => 65535,
             ));
        $this->hasColumn('codbarras_proveedor', 'string', 250, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 250,
             ));
        $this->hasColumn('stock', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('stock_min', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('stock_reposicion', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('foto1', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('foto2', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('foto3', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('foto4', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('foto5', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('foto6', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('categorias_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('precio', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('fk_productos_categorias1', array(
             'fields' => 
             array(
              0 => 'categorias_id',
             ),
             ));
        $this->option('collate', 'latin1_swedish_ci');
        $this->option('charset', 'latin1');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('categoria', array(
             'local' => 'categorias_id',
             'foreign' => 'id'));
    }
}